services:
  postgres:
    image: postgres:17  # Указание конкретной версии обеспечивает стабильность
    container_name: postgres17_crm3_cntnr
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: crm3
      POSTGRES_PASSWORD: Billkill13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  redis:
      image: redis:latest  # Используем последнюю версию Redis
      container_name: redis_crm3_cntnr  # Название контейнера Redis
      ports:
        - "6380:6379"  # Публикуем порт Redis
      volumes:
        - redis_data:/data  # Том для данных Redis
      environment:
        - REDIS_PASSWORD=Billkill13  # Установка пароля для Redis
      command: sh -c "redis-server --requirepass 'Billkill13' --daemonize yes && sleep 3 && redis-cli -a 'Billkill13' FLUSHDB && redis-cli -a 'Billkill13' SAVE && rm -f /data/dump.rdb && tail -f /dev/null"
      #command: sh -c "redis-server --requirepass 'Billkill13' --daemonize yes && sleep 3 && redis-cli -a 'Billkill13' FLUSHDB && redis-cli -a 'Billkill13' SAVE && rm -f /data/dump.rdb"
      #command: sh -c "redis-server --requirepass 'Billkill13' --daemonize yes && sleep 3 && redis-cli -a 'Billkill13' FLUSHDB && redis-cli -a 'Billkill13' SAVE && redis-cli -a 'Billkill13' shutdown && rm -f /data/dump.rdb && redis-server --requirepass 'Billkill13'"
      #command: sh -c "redis-server --daemonize yes && sleep 3 && redis-cli FLUSHDB && redis-cli SAVE && redis-cli shutdown && rm -f /data/dump.rdb && redis-server"

  crm3:  # Название вашего приложения на Python
    build: .
    image: crm3:latest
    container_name: crm3_container
    environment:
      - DATABASE_NAME=postgres
      - DATABASE_USER=crm3
      - DATABASE_PASSWORD=Billkill13
      - DATABASE_HOST=postgres
    ports:
      - "8001:8000"  # Предполагается, что ваше приложение работает на 8000 порту
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    command: gunicorn --bind 0.0.0.0:8000 crm3.wsgi

  celery:  # Celery Worker
    image: crm3:latest
    command: celery -A crm3 worker --pool=prefork --loglevel=info
    environment:
      - DATABASE_NAME=postgres
      - DATABASE_USER=crm3
      - DATABASE_PASSWORD=Billkill13
      - DATABASE_HOST=postgres
      - REDIS_PASSWORD=Billkill13
      - CELERY_BROKER_URL=redis://:Billkill13@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:Billkill13@redis:6379/1
    depends_on:
      - redis
    volumes:
      - .:/app

  celery_beat:  # Celery Beat
    image: crm3:latest
    command: celery -A crm3 beat --loglevel=info
    environment:
      - DATABASE_NAME=postgres
      - DATABASE_USER=crm3
      - DATABASE_PASSWORD=Billkill13
      - DATABASE_HOST=postgres
      - REDIS_PASSWORD=Billkill13
      - CELERY_BROKER_URL=redis://:Billkill13@redis:6379/0
    depends_on:
      - redis
    volumes:
      - .:/app

volumes:
  postgres_data: {}
  redis_data: {}